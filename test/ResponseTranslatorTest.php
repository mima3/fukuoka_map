<?php
date_default_timezone_set('Asia/Tokyo');
require 'vendor/autoload.php';
require './config.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-07 at 18:11:53.
 */
class ResponseTranslatorTest extends \PHPUnit_Framework_TestCase
{
    protected $model;
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $app = new \Slim\Slim();
        ORM::configure('sqlite::memory:');
        $db = ORM::get_db();
        $this->model = new \Model\MsTranslatorCacheModel($app, $db);
        $this->model->setup();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        ORM::reset_db();
    }

    function testTeapoatSparql()
    {
        ini_set('xdebug.var_display_max_children', -1);
        ini_set('xdebug.var_display_max_data', -1);
        ini_set('xdebug.var_display_max_depth', -1);
        $cache_db = $this->model->getCache('en');
        $trans = new \MyLib\MsTranslator(MS_AZURE_KEY,  $this->model, 'en');
        $ctrl = new \MyLib\ResponseTranslator($trans);
        $data = (array)(json_decode('{"resultCode":0,"errorMsg":null,"contents":{"head":{"vars":["p","o"]},"results":{"bindings":[{"p":{"type":"uri","value":"http:\/\/teapot.bodic.org\/predicate\/addressClean"},"o":{"type":"literal","value":"\u798f\u5ca1\u770c\u798f\u5ca1\u5e02\u6771\u533a\u9999\u690e2\u4e01\u76ee9\u756a1\u53f7"}},{"p":{"type":"uri","value":"http:\/\/teapot.bodic.org\/predicate\/dataset"},"o":{"type":"uri","value":"http:\/\/teapot.bodic.org\/dataset\/\u798f\u5ca1\u770c\u516c\u5171\u65bd\u8a2d"}},{"p":{"type":"uri","value":"http:\/\/teapot.bodic.org\/predicate\/fax\u756a\u53f7"},"o":{"type":"literal","value":"671-1996"}}]}}}'));
        $ret = $ctrl->translateTeapotSparql($data);
        $vars = $ret['contents']->head->vars;
        $bindings = $ret['contents']->results->bindings;

        $this->assertEquals(True, property_exists($bindings[0]->o , 'translate_value'));
        $this->assertEquals('9-1 kashii 2-Chome Higashi-Ku, Fukuoka City, Fukuoka Prefecture', $bindings[0]->o->translate_value);

        $this->assertEquals(False, property_exists($bindings[1]->o , 'translate_value'));

        $this->assertEquals(True, property_exists($bindings[2]->o , 'translate_value'));
        $this->assertEquals('671-1996', $bindings[2]->o->translate_value);
    }
}
